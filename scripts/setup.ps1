# Script de configuration et lancement pour Windows PowerShell
Write-Host "üöÄ Configuration et lancement de la plateforme acad√©mique..." -ForegroundColor Green

# V√©rifier si Docker est install√©
try {
    $dockerVersion = docker --version
    Write-Host "‚úÖ Docker d√©tect√©: $dockerVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker n'est pas install√©!" -ForegroundColor Red
    Write-Host "üì• Veuillez installer Docker Desktop depuis: https://www.docker.com/products/docker-desktop/" -ForegroundColor Yellow
    Write-Host "üîß Apr√®s l'installation, red√©marrez PowerShell et relancez ce script." -ForegroundColor Yellow
    exit 1
}

# V√©rifier si Docker Compose est disponible
try {
    $composeVersion = docker-compose --version
    Write-Host "‚úÖ Docker Compose d√©tect√©: $composeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker Compose n'est pas disponible!" -ForegroundColor Red
    exit 1
}

# Cr√©er les r√©pertoires n√©cessaires
Write-Host "üìÅ Cr√©ation des r√©pertoires..." -ForegroundColor Blue
New-Item -ItemType Directory -Force -Path "backend/uploads" | Out-Null
New-Item -ItemType Directory -Force -Path "frontend/build" | Out-Null

# Cr√©er le fichier .env pour le backend
Write-Host "Configuration du backend..." -ForegroundColor Blue
$backendEnv = @"
# Database Configuration
DATABASE_URL=postgresql://postgres:password@postgres:5432/academy_db
ASYNC_DATABASE_URL=postgresql+asyncpg://postgres:password@postgres:5432/academy_db

# Security
SECRET_KEY=your-super-secret-key-change-this-in-production
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# CORS
CORS_ORIGINS=["http://localhost:3000", "http://127.0.0.1:3000"]

# Jupyter Configuration
JUPYTER_TOKEN=your-jupyter-token
JUPYTER_URL=http://localhost:8888

# Upload Configuration
UPLOAD_DIR=./uploads
MAX_FILE_SIZE=10485760
"@
$backendEnv | Out-File -FilePath "backend\.env" -Encoding UTF8

# Cr√©er le fichier .env pour le frontend
Write-Host "Configuration du frontend..." -ForegroundColor Blue
$frontendEnv = @"
REACT_APP_API_URL=http://localhost:8000
REACT_APP_JUPYTER_URL=http://localhost:8888
"@
$frontendEnv | Out-File -FilePath "frontend\.env" -Encoding UTF8

# Construire et d√©marrer les services
Write-Host "üî® Construction des images Docker..." -ForegroundColor Blue
docker-compose build

Write-Host "üöÄ D√©marrage des services..." -ForegroundColor Blue
docker-compose up -d

# Attendre que les services d√©marrent
Write-Host "‚è≥ Attente du d√©marrage des services..." -ForegroundColor Yellow
Start-Sleep -Seconds 10

# V√©rifier l'√©tat des services
Write-Host "üîç V√©rification de l'√©tat des services..." -ForegroundColor Blue
docker-compose ps

Write-Host ""
Write-Host "üéâ Plateforme lanc√©e avec succ√®s!" -ForegroundColor Green
Write-Host ""
Write-Host "üì± Acc√®s aux services:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Frontend (React): http://localhost:3000" -ForegroundColor White
Write-Host "   ‚Ä¢ Backend (FastAPI): http://localhost:8000" -ForegroundColor White
Write-Host "   ‚Ä¢ API Documentation: http://localhost:8000/docs" -ForegroundColor White
Write-Host "   ‚Ä¢ Jupyter Notebook: http://localhost:8888" -ForegroundColor White
Write-Host ""
Write-Host "üîë Comptes de test:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ √âtudiant: student@academy.com / password123" -ForegroundColor White
Write-Host "   ‚Ä¢ Enseignant: teacher@academy.com / password123" -ForegroundColor White
Write-Host "   ‚Ä¢ Admin: admin@academy.com / password123" -ForegroundColor White
Write-Host ""
Write-Host "üìã Commandes utiles:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Voir les logs: docker-compose logs -f" -ForegroundColor White
Write-Host "   ‚Ä¢ Arr√™ter: docker-compose down" -ForegroundColor White
Write-Host "   ‚Ä¢ Red√©marrer: docker-compose restart" -ForegroundColor White
Write-Host ""
Write-Host "üåê Ouvrez http://localhost:3000 dans votre navigateur pour commencer!" -ForegroundColor Green
